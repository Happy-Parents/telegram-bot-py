from telegram import Update, ReplyKeyboardMarkup, Message
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

BOT_TOKEN = "8108504859:AAFwonWfT6VVV2LlOHf4rtE010x9lmpNlGY"
ADMIN_GROUP_ID = -1002710807138  # ID –≥—Ä—É–ø–∏, –∫—É–¥–∏ –Ω–∞–¥—Å–∏–ª–∞—é—Ç—å—Å—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

user_states = {}
message_to_user_map = {}

WELCOME_MESSAGE = "üëã –í—ñ—Ç–∞—î–º–æ —É –±–æ—Ç—ñ *Happy Parents*!\n–û–±–µ—Ä–∏ –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ:"
ASK_MESSAGE = "‚úçÔ∏è –ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è. –ú–∏ —è–∫–Ω–∞–π—à–≤–∏–¥—à–µ –≤—ñ–¥–ø–æ–≤—ñ–º–æ."
CONFIRM_MESSAGE = "‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É."

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["‚ùì –ü–∏—Ç–∞–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É"]]
    markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text(WELCOME_MESSAGE, reply_markup=markup, parse_mode='Markdown')

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message: Message = update.message
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    text = message.text

    # üë®‚Äçüíª –Ø–∫—â–æ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –≥—Ä—É–ø—ñ —Ç–∞ reply
    if chat_id == ADMIN_GROUP_ID and message.reply_to_message:
        original_message_id = message.reply_to_message.message_id
        recipient_id = message_to_user_map.get(original_message_id)

        if recipient_id:
            await context.bot.send_message(
                chat_id=recipient_id,
                text=f"üí¨ –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n{text}"
            )
            await message.reply_text("üì§ –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.")
        else:
            await message.reply_text("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.")
        return

    # ü§ñ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ–±–∏—Ä–∞—î "–ü–∏—Ç–∞–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É"
    if text == "‚ùì –ü–∏—Ç–∞–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É":
        user_states[user_id] = "awaiting_question"
        await message.reply_text(ASK_MESSAGE)
        return

    # üßæ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É —Å—Ç–∞–Ω—ñ "–æ—á—ñ–∫—É—î –ø–∏—Ç–∞–Ω–Ω—è"
    if user_states.get(user_id) == "awaiting_question":
        user_states.pop(user_id)
        username = update.effective_user.username or f"id:{user_id}"
        forwarded_message = await context.bot.send_message(
            chat_id=ADMIN_GROUP_ID,
            text=f"üì© –ù–æ–≤–µ –ø–∏—Ç–∞–Ω–Ω—è –≤—ñ–¥ @{username} ({user_id}):\n\n{text}"
        )

        # –ó–±–µ—Ä–µ–≥—Ç–∏ –∑–≤'—è–∑–æ–∫ –º—ñ–∂ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º —É –≥—Ä—É–ø—ñ —Ç–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
        message_to_user_map[forwarded_message.message_id] = user_id

        await message.reply_text(CONFIRM_MESSAGE)
        return

    await message.reply_text("üîÑ –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –º–µ–Ω—é –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /start.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")

    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    app.run_polling()

if __name__ == "__main__":
    main()
